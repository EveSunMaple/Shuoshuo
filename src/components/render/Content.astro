---
import type { BulletedListItem } from "../../utils/interfaces.ts";
import type { NumberedListItem } from "../../utils/interfaces.ts";
import BulletedList from "./components/bulleted_list.astro";
import NumberedList from "./components/numbered_list.astro";
import ParagraphBlock from "./components/paragraph.astro";
import CodeBlock from "./components/code.astro";
import ImageBlock from "./components/image.astro";
import QuoteBlock from "./components/quote.astro";
import TableBlock from "./components/table.astro";
import ToDoBlock from "./components/to_do.astro";
import Heading1Block from "./components/heading_1.astro";
import Heading2Block from "./components/heading_2.astro";
import Heading3Block from "./components/heading_3.astro";

import type { Block } from "../../utils/interfaces.ts";

const { blocks, layout } = Astro.props as { blocks: Block[]; layout: string };
let numberedListItems = [] as BulletedListItem[];
let bulletedListItems = [] as NumberedListItem[];
let IsList = false as boolean;
let id = 0;
---

{
    blocks.map((block: Block) => {
        if (IsList) {
            if (bulletedListItems.length > 0) {
                bulletedListItems = [];
            }
            if (numberedListItems.length > 0) {
                numberedListItems = [];
            }
            IsList = false;
        }
        switch (block.type) {
            case "bulleted_list_item":
                bulletedListItems.push(
                    block.bulleted_list_item as BulletedListItem,
                );
                return null;
            case "numbered_list_item":
                numberedListItems.push(
                    block.numbered_list_item as NumberedListItem,
                );
                return null;
            case "end":
                if (bulletedListItems.length > 0) {
                    IsList = true;
                    return <BulletedList items={bulletedListItems} />;
                }
                if (numberedListItems.length > 0) {
                    IsList = true;
                    return <NumberedList items={numberedListItems} />;
                }
            case "paragraph":
                return <ParagraphBlock block={block.paragraph} />;
            case "quote":
                return <QuoteBlock block={block.quote} />;
            case "code":
                return <CodeBlock block={block.code} />;
            case "image":
                return <ImageBlock block={block.image} />;
            case "to_do":
                return <ToDoBlock block={block.to_do} />;
            case "heading_1":
                id++;
                return <Heading1Block block={block.heading_1} id={`${layout}-${id}`}/>;
            case "heading_2":
                id++;
                return <Heading2Block block={block.heading_2}} id={`${layout}-${id}`}/>;
            case "heading_3":
                id++;
                return <Heading3Block block={block.heading_3}} id={`${layout}-${id}`}/>;
            case "table":
                return <TableBlock block={block.table} />;
            default:
                return null; // 对于未知类型忽略
        }
    })
}
